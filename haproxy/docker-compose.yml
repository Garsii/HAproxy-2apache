version: '3.9'

services:
  haproxy:
    image: haproxy-custom
    container_name: haproxy
    networks:
      - app_network
    ports:
      - "80:80"  # HAProxy escucha en el puerto 80 del host
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg  # Montar el archivo de configuración de HAProxy

  apache1:
    image: apache-custom
    container_name: apache1
    networks:
      - app_network
    ports:
      - "8081:80"  # Apache1 escucha en el puerto 8081 del host
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword
      - MYSQL_DB=testdb
    volumes:
      - ./html:/var/www/html  # Montar el contenido HTML
    depends_on:
      - mysql  # Espera a que MySQL esté disponible

  apache2:
    image: apache-custom
    container_name: apache2
    networks:
      - app_network
    ports:
      - "8082:80"  # Apache2 escucha en el puerto 8082 del host
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword
      - MYSQL_DB=testdb
    volumes:
      - ./html:/var/www/html  # Montar el contenido HTML
    depends_on:
      - mysql  # Espera a que MySQL esté disponible

  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Monta el archivo init.sql
    ports:
      - "3306:3306"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
